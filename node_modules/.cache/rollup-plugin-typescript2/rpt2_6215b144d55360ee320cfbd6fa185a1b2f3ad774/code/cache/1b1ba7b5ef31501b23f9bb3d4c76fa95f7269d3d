{"code":"import { __decorate } from \"tslib\";\nimport { LitElement, html, css } from 'lit';\nimport { property } from 'lit/decorators.js';\nclass AlarmoButton extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.disabled = false;\n        this.scaled = false;\n    }\n    render() {\n        return html `\n      ${this.scaled\n            ? html `\n            <button ?disabled=${this.disabled}>\n              <slot></slot>\n            </button>\n          `\n            : html `\n            <mwc-button ?disabled=${this.disabled} ?outlined=${!this.disabled}>\n              <slot></slot>\n            </mwc-button>\n          `}\n    `;\n    }\n    handleFocus(ev) {\n        ev.target.blur();\n    }\n    static get styles() {\n        return css `\n      button {\n        width: 100%;\n        border-width: calc(var(--content-scale, 1) * 1px);\n        border-color: var(--mdc-button-outline-color, rgba(0, 0, 0, 0.12));\n        color: var(--mdc-theme-primary, #6200ee);\n        border-radius: var(--mdc-shape-small, 4px);\n        padding: calc(var(--content-scale, 1) * 0.875rem);\n        background-color: transparent;\n        font-size: calc(var(--content-scale, 1) * 0.875rem);\n        font-weight: var(--mdc-typography-button-font-weight, 500);\n        letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0892857em);\n        text-decoration: var(--mdc-typography-button-text-decoration, none);\n        text-transform: var(--mdc-typography-button-text-transform, uppercase);\n        -webkit-font-smoothing: antialiased;\n        font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n      }\n      button:not(:disabled) {\n        cursor: pointer;\n        transition: background-color 0.1s ease;\n      }\n      button:disabled {\n        color: var(--disabled-text-color);\n        border: none;\n      }\n      button:not(:disabled):hover {\n        background-color: rgba(var(--rgb-primary-color), 0.06);\n      }\n      button:not(:disabled):active {\n        background-color: rgba(var(--rgb-primary-color), 0.12);\n      }\n      button:focus {\n        outline: none;\n      }\n      mwc-button {\n        width: 100%;\n      }\n      ::slotted(ha-icon) {\n        --mdc-icon-size: calc(var(--content-scale, 1) * 1.5rem);\n        margin: calc(var(--content-scale, 1) * -0.25rem) 0px;\n        display: flex;\n      }\n      ::slotted(ha-icon.leading) {\n        margin-left: calc(var(--content-scale, 1) * -0.3rem);\n        margin-right: calc(var(--content-scale, 1) * 0.3rem);\n      }\n      ::slotted span {\n        display: flex;\n      }\n    `;\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], AlarmoButton.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], AlarmoButton.prototype, \"scaled\", void 0);\ncustomElements.define('alarmo-button', AlarmoButton);\n","references":["/home/ubuntu/Documents/GitHub/alarmo-card/node_modules/lit/index.d.ts","/home/ubuntu/Documents/GitHub/alarmo-card/node_modules/lit/decorators.d.ts"]}
