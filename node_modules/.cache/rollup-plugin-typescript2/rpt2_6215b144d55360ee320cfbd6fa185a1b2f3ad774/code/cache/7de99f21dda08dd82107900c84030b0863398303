{"code":"export function isDefined(value) {\n    return value !== null && value !== undefined;\n}\nexport function isEmpty(value) {\n    const type = typeof value;\n    switch (type) {\n        case 'object':\n            return Object.keys(value).length == 0;\n        case 'string':\n            return String(value).length == 0;\n        default:\n            return !isDefined(value);\n    }\n}\nexport function isEqual(...arr) {\n    return arr.every(e => JSON.stringify(e) === JSON.stringify(arr[0]));\n}\nexport const omit = (obj, ...keys) => {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n};\nexport function pick(obj, keys) {\n    if (!obj)\n        return {};\n    return Object.entries(obj)\n        .filter(([key]) => keys.includes(key))\n        .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {});\n}\n","references":[]}
