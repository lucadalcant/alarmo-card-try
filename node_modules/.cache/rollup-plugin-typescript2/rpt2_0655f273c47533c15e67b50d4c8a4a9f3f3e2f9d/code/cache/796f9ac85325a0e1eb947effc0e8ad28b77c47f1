{"code":"import { __decorate } from \"tslib\";\nimport { LitElement, html, css } from 'lit';\nimport { property } from 'lit/decorators.js';\nclass AlarmoButton extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.disabled = false;\n        this.scaled = false;\n    }\n    render() {\n        return html `\n      <button ?disabled=${this.disabled}>\n        <slot></slot>\n      </button>\n    `;\n    }\n    handleFocus(ev) {\n        ev.target.blur();\n    }\n    static get styles() {\n        return css `\n      button {\n        position: relative;\n        width: 100%;\n        border: 1px solid var(--outline-color);\n        border-radius: 4px;\n        background: transparent;\n        color: var(--wa-color-brand-on-normal);\n        padding: calc(var(--content-scale, 1) * 0.875rem);\n        font-size: calc(var(--content-scale, 1) * 1rem);\n        letter-spacing: 0.04em;\n        font-weight: 500;\n        -webkit-font-smoothing: antialiased;\n        font-family: Roboto, sans-serif;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        z-index: 1;\n        transition: border-color 0.1s ease;\n      }\n      button:before {\n        position: absolute;\n        pointer-events: none;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        content: '';\n        border-radius: 4px;\n        background: var(--primary-color);\n        opacity: 0;\n        z-index: -2;\n        transition: opacity 0.1s ease-in-out;\n      }\n      button:not(:disabled) {\n        cursor: pointer;\n      }\n      button:disabled {\n        color: var(--disabled-text-color);\n        border: none;\n      }\n      button:not(:disabled):hover {\n        border: 1px solid var(--outline-color);\n      }\n      button:not(:disabled):hover:before {\n        opacity: 0.12;\n      }\n      button:not(:disabled):active {\n        border: 1px solid var(--outline-hover-color);\n      }\n      button:not(:disabled):active:before {\n        opacity: 0.24;\n      }\n      button:focus {\n        outline: none;\n      }\n      ::slotted(ha-icon) {\n        --mdc-icon-size: calc(var(--content-scale, 1) * 1.5rem);\n        margin: calc(var(--content-scale, 1) * -0.25rem) 0px;\n        display: flex;\n      }\n      ::slotted(ha-icon.leading) {\n        margin-left: calc(var(--content-scale, 1) * -0.3rem);\n        margin-right: calc(var(--content-scale, 1) * 0.3rem);\n      }\n      ::slotted span {\n        display: flex;\n      }\n    `;\n    }\n}\n__decorate([\n    property({ type: Boolean })\n], AlarmoButton.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], AlarmoButton.prototype, \"scaled\", void 0);\ncustomElements.define('alarmo-button', AlarmoButton);\n","references":["/home/ubuntu/Documents/GitHub/alarmo-card/node_modules/lit/index.d.ts","/home/ubuntu/Documents/GitHub/alarmo-card/node_modules/lit/decorators.d.ts"]}
